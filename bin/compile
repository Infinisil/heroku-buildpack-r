#!/bin/bash
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR
# https://devcenter.heroku.com/articles/buildpack-api#bin-compile

set -eo pipefail
set -o errtrace
set -o nounset

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
BUILD_DIR=$1
#CACHE_DIR=$2
#ENV_DIR=$3

#----------------------------------------------------------------------

# import supporting script
source "$DIR/script-common"

# derive number from stack (heroku-16, heroku-18, heroku-20)
HEROKU_STACK=${STACK:7}

# check if it's supported
if [[ ! $HEROKU_STACK =~ (16|18) ]]; then
  echo
  error "ERROR: This buildpack is NOT intended for use with the '${STACK}' stack"
  echo
  echo "The supported stacks are 'heroku-16' and 'heroku-18'." | indent
  echo
  echo "Use the 'heroku stack:set' CLI command to set the appropriate stack." | indent
  echo "See https://devcenter.heroku.com/articles/stack" | indent
  echo
  echo "Optionally, for greater control and flexibility consider using the Heroku" | indent
  echo "container stack together with the heroku-docker-r implementation." | indent
  echo "See https://github.com/virtualstaticvoid/heroku-docker-r for more information." | indent
  echo
  exit 1
fi

# ensure current directory is the build location
# this is where the application files will be located
# and so relative paths can be used
cd "$BUILD_DIR"

# enable script debugging
# set via heroku config:set BUILDPACK_DEBUG=1
topic "Enabling script debugging"
set -x

# debug
START_TIME="$(date -u +%s)"

# define static vars
BUILDPACK_NAME=heroku-buildpack-r
R_VERSION=3.6.3

# NB: undocumented feature ~ used for testing different versions
# E.g. set via heroku config:set BUILDPACK_VERSION=test
BUILDPACK_VERSION=${BUILDPACK_VERSION:-latest}


# NB: change to bust cache
CACHE_KEY="${BUILDPACK_VERSION}-${HEROKU_STACK}-27ac154f"

# get cache file names
cache_filename_for rootfs.tar.gz ROOTFS_OUTPUTS

if [ -f "$ROOTFS_OUTPUTS" ]; then
  echo "Setting up build environment from cache" | indent
  build_image=$ROOTFS_OUTPUTS
else
  echo "Setting up build environment" | indent
  fetch "$(s3_url "$(build_archive)")" build.tar.gz build_image
  delete_download=1
fi

# install to temp location
ROOTFS=$(mktemp -d)
mkdir -p "$ROOTFS"
pushd "$ROOTFS" > /dev/null
tar xf "$build_image"
popd > /dev/null

# delete cached download?
if [ "$delete_download" == "1" ]; then
  rm "$build_image"
fi

rsync -a "${BUILD_DIR}/" /src/

in_chroot_sudo /bin/bash -c "curl -L https://nixos.org/nix/install | sh" 2>&1 | indent

# include meta variables
cat >> .profile.d/heroku-buildpack-r-env.sh <<EOL
export BUILDPACK_NAME="$BUILDPACK_NAME"
export BUILDPACK_VERSION="$BUILDPACK_VERSION"
export BUILDPACK_R_VERSION="$R_VERSION"
EOL

# debug
END_TIME="$(date -u +%s)"
ELAPSED="$(( END_TIME - START_TIME ))"
echo "Install took $ELAPSED seconds to complete" | indent
